class Solution {
    public TreeNode addOneRow(TreeNode root, int val, int depth) {
        if(depth==1){
            TreeNode newRoot=new TreeNode(val);
            newRoot.left=root;
            return newRoot;
        }
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        int current=1;
        while(current<depth-1){
            int size=q.size();
            for(int i=0;i<size;i++){
                TreeNode node=q.poll();
                if(node.left!=null){
                    q.add(node.left);
                }
                if(node.right!=null){
                    q.add(node.right);
                }
            }
            current++;
        }

        while(!q.isEmpty()){
            TreeNode node=q.poll();
            TreeNode newLeft=new TreeNode(val);
            TreeNode newRight=new TreeNode(val);

            newLeft.left=node.left;
            node.left=newLeft;

            newRight.right=node.right;
            node.right=newRight;
        }
        return root;
    }
}
